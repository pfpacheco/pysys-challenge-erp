services:
  mongo:
    container_name: mongo
    environment: {MONGO_INITDB_ROOT_PASSWORD: root123, MONGO_INITDB_ROOT_USERNAME: root}
    image: mongo:latest
    ports: ['27017:27017']
    volumes: ['mongo_vol:/tmp/mongodb/data']
  postgres:
    container_name: postgres
    environment: {POSTGRES_DB: erpdb, POSTGRES_PASSWORD: admin123, POSTGRES_USER: admin}
    image: postgres:latest
    ports: ['5432:5432']
    volumes: ['postgres_vol:/tmp/postgres/data']
  redis:
    container_name: redis
    image: redis:latest
    ports: ['6379:6379']
    volumes: ['redis_vol:/tmp/redis/data']
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    ports: ['5672:5672']
    volumes: ['rabbitmq_vol:/tmp/rabbitmq/data']    
  pysys-challenge-app:
    build: ./pysys-challenge-app
    #command: python3 -m flask run --host=0.0.0.0 --port=5000
    command: gunicorn com.pysys.api.api:app -b :5000 --capture-output --enable-stdio-inheritance --log-level=debug --access-logfile=- --log-file=-
    container_name: pysys-challenge-app
    depends_on: [postgres, redis, mongo, rabbitmq]
    ports: ['5000:5000']
  pysys-challenge-web:
    build: ./pysys-challenge-web
    command: npm start
    container_name: pysys-challenge-web
    depends_on: [pysys-challenge-app]
    ports: ['4200:4200']
  nginx:
    build: ./docks/nginx
    container_name: nginx
    depends_on: [pysys-challenge-web]    
    ports: ['8000:80']    

version: '3.5'
volumes: {mongo_vol: null, postgres_vol: null, redis_vol: null, rabbitmq_vol: null}
